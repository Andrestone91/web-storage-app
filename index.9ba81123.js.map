{"mappings":"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","sources":["src/state.ts","src/index.ts","src/components/header/index.ts","src/components/inbox/index.ts","src/components/text/index.ts","src/components/todo-items/index.ts","src/pages/homePage.ts"],"sourcesContent":["const state ={\r\n    data:{\r\n        tasks:[]    \r\n    },\r\n    listeners:[],\r\n    \r\n   init(){\r\n      const data:any = localStorage.getItem(\"saved-state\")\r\n    if (!data) {\r\n    return console.log(\"bienvenidos a una list de trabajos pendientes que hice utilizando un localStorage\");\r\n    \r\n  }\r\n  this.setState(JSON.parse(data))\r\n   },\r\n    getState(){\r\n        return this.data\r\n    },\r\n    getEnableTasks(){\r\n        const currentState = this.getState()\r\n        return currentState.tasks.filter((t)=>\r\n        !t.deleted)\r\n        \r\n    },\r\n    setState(newState){\r\n        this.data = newState\r\n        for (const cb of this.listeners) {\r\n            cb(newState)\r\n        }  \r\n      localStorage.setItem(\"saved-state\",JSON.stringify(newState))\r\n        console.log(\"he cambiado\", this.data);\r\n    },\r\n    subscribe(callback:(any)=>any){\r\n        this.listeners.push(callback)\r\n    },\r\n    addTask(id, title){\r\n        const currentState = this.getState()\r\n        currentState.tasks.push({id, title, completed:false ,deleted:false})\r\n        this.setState(currentState)\r\n    },\r\n    changeItemState(id, value){\r\n        const currentState = this.getState();\r\n     const found = currentState.tasks.find((t)=> t.id == id)\r\n     found.completed = value;\r\n     this.setState(currentState)\r\n        console.log(found);\r\n        \r\n    },\r\n    addItem(item:string){\r\n        const cs = this.getState()\r\n        cs.data.tasks.push(item)        \r\n        this.setState(cs)\r\n    },\r\n}\r\n\r\n\r\nexport {state}","import { init as initHeader } from \"./components/header\";\r\nimport { init as initInbox } from \"./components/inbox\";\r\nimport { init as initText } from \"./components/text\";\r\nimport { init as initTodoItem } from \"./components/todo-items\";\r\nimport { initHomePage } from \"./pages/homePage\";\r\nimport { state } from \"./state\";\r\n\r\nfunction main(){\r\n  state.init()\r\n    initHeader()\r\n    initInbox()\r\n    initText()\r\n    initTodoItem()\r\n    const root = document.querySelector(\".root\")\r\n    initHomePage(root)\r\n}\r\nmain()","export function init(){\r\n    class Header extends HTMLElement {\r\n        \r\n        constructor() {\r\n          super();\r\n         this.render()\r\n        }\r\n        render(){\r\n            this.innerHTML = \"by Andrestone\"\r\n            this.style.display = \"flex\"\r\n            this.style.justifyContent = \"center\"\r\n            this.style.alignItems = \"center\"\r\n            this.style.backgroundColor =\"#FF8282\"\r\n            this.style.height = \"60px\"\r\n            this.style.display =\"flex\"\r\n            \r\n        }\r\n        \r\n    }\r\n    customElements.define('custom-header', Header);\r\n}","import { state } from \"../../state\";\r\nexport function init(){\r\n    class Inbox extends HTMLElement {\r\n        shadow = this.attachShadow({mode: 'open'});\r\n        constructor() {\r\n          super();\r\n     this.render()\r\n        }\r\n        connectedCallback(){\r\n            const form = this.shadow.querySelector(\".form\")\r\n            \r\n            form?.addEventListener(\"submit\",(e)=>{\r\n                e.preventDefault()\r\n                const c = e.target as any  \r\n                               \r\n              console.log(c.text.value,state.data);\r\n              \r\n            })\r\n        }\r\n        render(){\r\n         \r\n            const style = document.createElement(\"style\")\r\n            style.textContent =`\r\n            .form{\r\n                display:flex;\r\n                flex-direction:column;  \r\n            }\r\n            .label{\r\n                font-size: 18px;\r\n            }\r\n            .input{\r\n                height: 50px;\r\n                border: 2px solid #000000;\r\n                border-radius: 4px;\r\n                margin-bottom: 12px;\r\n                padding:5px;\r\n            }\r\n            .boton{\r\n                background-color: #9CBBE9;\r\n                height: 55px;\r\n                border-radius: 4px;\r\n                font-size: 22px;\r\n                margin-bottom: 46px;\r\n            }\r\n            `\r\n            this.shadow.appendChild(style)\r\n            const form = document.createElement(\"form\")\r\n            form.classList.add(\"form\")\r\n            \r\n            form.innerHTML = `\r\n            <label class=\"label\"> Nuevo pendiente </label>\r\n            <input class=\"input\" type=\"text\" name=\"text\">\r\n            <button class=\"boton\">agregar</button>\r\n            `\r\n          \r\n            const input = form.querySelector(\".input\")\r\n           \r\n            \r\n            this.shadow.appendChild(form)\r\n        }\r\n    }\r\n    customElements.define('custom-inbox', Inbox);\r\n}","export function init(){\r\n    class Text extends HTMLElement {\r\n        shadow = this.attachShadow({mode: 'open'});\r\n        tags = [\"h1\",\"p\"]\r\n        tag = \"p\"\r\n        constructor() {\r\n            super();\r\n            this.render()\r\n        }\r\n        render(){\r\n            const atributoTag:any = this.getAttribute(\"tag\")\r\n            if(this.tags.includes(atributoTag)){\r\n                this.tag =  this.getAttribute(\"tag\") || this.tag;  \r\n            }\r\n          //  const style = document.createElement(\"style\")\r\n          //  style.textContent = `\r\n          //  .h1{\r\n          //      font-size: 28px;\r\n          //  }\r\n          //  `\r\n          //  this.shadow.appendChild(style)\r\n\r\n            const rootEl = document.createElement(this.tag)\r\n            rootEl.innerHTML = this.innerHTML\r\n            this.shadow.appendChild(rootEl)\r\n        }\r\n    }\r\n    customElements.define('custom-text', Text);\r\n}","import { state } from \"../../state\";\r\nexport function init(){\r\n    class TodoItem extends HTMLElement {\r\n        shadow = this.attachShadow({mode: 'open'});\r\n        title:string ;\r\n        checked: boolean | null;\r\n        constructor() {\r\n          super();\r\n        }\r\n        connectedCallback(){\r\n            this.title = this.getAttribute(\"title\") || \"\";\r\n            this.checked = this.hasAttribute(\"checked\")\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = `\r\n            .root ,.enable-border{\r\n                background-color:  #FFF599;\r\n                height: 112px;\r\n                padding:10px;\r\n                display:flex;\r\n                flex-direction: column;\r\n            }\r\n           \r\n            .checkbox-input{\r\n                width:21px;\r\n                height:21px;\r\n            }\r\n        \r\n            .titulo.checked{\r\n                text-decoration: line-through;\r\n            }\r\n            \r\n            .titulo{\r\n            margin-right:10px;\r\n            font-size:18px;\r\n             }\r\n        \r\n           .linea{\r\n            display:flex;\r\n            justify-content: space-between;\r\n               }\r\n\r\n              .contenedor-boton{\r\n                  display: flex;\r\n                justify-content: end;\r\n              }\r\n              .contenedor-boton__eliminar{\r\n                  width:60px;\r\n                  height: 20px;\r\n                  visibility:hidden;\r\n                  background-color: tomato;\r\n                  color: white;\r\n                  text-decoration: underline;\r\n              }\r\n              `\r\n           this.shadow.appendChild(style)\r\n            this.render()\r\n        }\r\n        addCallbacks(){\r\n            const rootEl = this.shadow.querySelector(\".root\")\r\n            rootEl?.addEventListener(\"click\",(e)=>{\r\n               const target = e.target as any\r\n               const enableEl:any = this.shadow.querySelector(\".enable-border\")\r\n               enableEl.style.border = `solid`\r\n               const boton:any = this.shadow.querySelector(\".contenedor-boton__eliminar\")\r\n               boton.style.visibility = \"visible\"\r\n            })\r\n            const chEl = this.shadow.querySelector(\".checkbox-input\")\r\n            chEl?.addEventListener(\"click\",(e:any)=>{\r\n\r\n                const event = new CustomEvent('change', {\r\n                    detail: {\r\n                      id:this.id,\r\n                      value: e.target.checked\r\n                    }\r\n                  });\r\n                  this.dispatchEvent(event)\r\n                })\r\n                const botonEl = this.shadow.querySelector(\".contenedor-boton__eliminar\")\r\n                botonEl?.addEventListener(\"click\",(e)=>{\r\n                  e.preventDefault()\r\n                  const id = this.getAttribute(\"id\")\r\n                  const currentState = state.getState()\r\n    \r\n                  for (const tasks of currentState.tasks) {\r\n                    if (tasks.id == id) {\r\n                        tasks.deleted = true\r\n                    }\r\n                }\r\n               state.setState(currentState)\r\n                })\r\n            }\r\n        render(){\r\n            const div = document.createElement(\"div\")\r\n\r\n           div.innerHTML = `\r\n           <div class=\"enable-border\">\r\n           <div class=\"root\">\r\n             <h4 class=\"titulo ${this.checked ? \"checked\" : \"\"}\">\r\n                 <div class=\"linea\">\r\n                   ${this.title}<input class=\"checkbox-input\" type=\"checkbox\" ${this.checked ? \"checked\" : \"\"} />\r\n                </h4>\r\n             </div>\r\n             <div class=\"contenedor-boton\">\r\n           <button class=\"contenedor-boton__eliminar\">eliminar</button>\r\n           </div>\r\n            </div>\r\n           </div>\r\n            `\r\n            this.shadow.appendChild(div)\r\n            this.addCallbacks()\r\n        }\r\n    }\r\n    customElements.define('todo-item', TodoItem);\r\n}","import { state } from \"../state\"\r\n\r\nexport function initHomePage(root){\r\n  const div = document.createElement(\"div\")\r\n  const tasks = state.getEnableTasks()\r\n\r\n    div.innerHTML = `\r\n    <custom-header></custom-header>\r\n    <div class=\"container\">\r\n      <h1 class=\"title\">Mis pendientes</h1>\r\n      <form class=\"form\">\r\n       <label class=\"label\">\r\n       Nuevo pendiente\r\n           <input class=\"input-tasks\" type=\"text\" name=\"text\">\r\n       </label>\r\n      <button class=\"boton\">agregar</button>\r\n      </form>\r\n    <ul class=\"lista\">\r\n    </ul>\r\n    `\r\n    const listaEl:any = div.querySelector(\".lista\")\r\n    \r\n    function createTasks(items){    \r\n      \r\n      listaEl.innerHTML = \"\";\r\n      for (const item of items) {\r\n        const todoItem = document.createElement(\"todo-item\")\r\n        todoItem.setAttribute(\"title\",item.title)\r\n        todoItem.setAttribute(\"id\",item.id)\r\n        if(item.completed){\r\n          todoItem.setAttribute(\"checked\", \"true\")\r\n        }\r\n        todoItem.addEventListener(\"change\",(e:any)=>{\r\n          state.changeItemState(e.detail.id, e.detail.value)\r\n          \r\n        })\r\n        listaEl.appendChild(todoItem)\r\n      }\r\n    }\r\n    const input:any = div.querySelector(\".input-tasks\")\r\n  const form = div.querySelector(\".form\")\r\n  form?.addEventListener(\"submit\",(e)=>{\r\n    e.preventDefault()\r\n    const target = e.target as any\r\n  const tareas = {\r\n   title: target.text.value,\r\n   id: Math.random(),\r\n   }\r\n   input.value = \"\"\r\n   state.addTask(tareas.id,tareas.title)\r\n\r\n  })\r\n    \r\n    state.subscribe(()=>{\r\n     createTasks(state.getEnableTasks())\r\n    })\r\n\r\n   createTasks(tasks)\r\n\r\n   \r\n    root.appendChild(div)\r\n}"],"names":["$0b89d474933103bc$export$ca000e230c0caa3e","data","tasks","listeners","init","localStorage","getItem","console","log","this","setState","JSON","parse","getState","getEnableTasks","filter","t","deleted","newState","cb","setItem","stringify","subscribe","callback","push","addTask","id","title","currentState","completed","changeItemState","value","found","find","addItem","item","cs","Header","HTMLElement","constructor","super","render","innerHTML","style","display","justifyContent","alignItems","backgroundColor","height","customElements","define","Inbox","shadow","attachShadow","mode","connectedCallback","querySelector","addEventListener","e","preventDefault","c","target","text","document","createElement","textContent","Text","tags","tag","atributoTag","getAttribute","includes","rootEl","appendChild","TodoItem","checked","hasAttribute","root","div","listaEl","createTasks","items","todoItem","setAttribute","detail","input"],"version":3,"file":"index.9ba81123.js.map"}